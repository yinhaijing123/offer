/*************************************************************************************************************************
问题描述：在一个 n * m 的二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。

思路分析：根据该数组的特点，查找可从右上角（或者左下角）来排查数值查找范围。
		  当要查找的目标=右上角数时，返回true；当要查找的目标>右上角数时，则：向下排查；当要查找的目标<右上角数时,则：向左排查
		  （或者当要查找的目标=左下角数时，返回true；当要查找的目标<左下角数时，则：向上排查；当要查找的目标<左下角数时,则：向右排查）
		  否则：返回false。
**************************************************************************************************************************/

class Solution {
public:
    bool findNumberIn2DArray(vector<vector<int>>& matrix, int target) {
        if(matrix.empty())
            return false;
        int row=matrix.size();
        int col=matrix[0].size();
        for(int i=0,j=col-1;i<row && j>=0;)
        {
            if(target==matrix[i][j])
                return true;
            else if(target<matrix[i][j])
            {
                j--;                                   //向左排查
                continue;
            }
            else
            {
                i++;                                   //向下排查
            }
        }
        return false;
    }
};