/*******************************************************************************************
问题描述：
    请实现一个函数，将一个字符串中的每个空格替换成“%20”。例如，当字符串为We Are Happy.则经过替换之后的字符串为We%20Are%20Happy。
思路分析：为提高效率，使用从后向前复制的方法来实现，其算法时间复杂度为O(n)
    1.遍历字符串，计算原字符串包含几个空格字符（从而确定新字符串的长度。新字符串长度=原字符串长度+2*空格字符数）
    2.从后向前复制。当遇到空格字符时，将'0','2','%'分别赋值给三个连续的字符，未碰到空格字符，直接向后赋值即可。
*******************************************************************************************/
void replaceSpace(char *str,int length) {
        if(str==nullptr||length==0)
            return;
        //1.计算空格数；
        int numofblank=0;
        for(int i=0;i<length;i++)
        {
            if(str[i]==' ')
                numofblank++;
        }
        //2.倒移。根据空格数计算出最终字符串长度（其中每含一个空格字符，新字符串便多两个字符），从后向前复制字符，遇到空格用%20替换。
        if(numofblank==0)
            return;
        int newlength=length+2*numofblank;
        str[newlength]='\0';
        int j=length-1;
        for(int i=newlength-1;i>=0;i--,j--)
        {
            if(str[j]==' ')
            {
                str[i--]='0';
                str[i--]='2';
                str[i]='%';
            }
            else
            {
                str[i]=str[j];
            }
            
        }
	}