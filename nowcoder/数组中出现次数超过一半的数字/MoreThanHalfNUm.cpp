/*************************************************************************************************************************
问题描述：数组中有一个数字出现的次数超过数组长度的一般，请找出这个数字。若不存在则输出0；
		  例如：arr={1,2,3,2,2,2,5,4,2},数组长度为9,2出现了5次，输出2.

思路分析：排序(若存在该数，则排序之后，数组中间的数必为该数)
		  1.排序。
		  2.利用排序后的数组中间数必为过半数的思路，遍历数组，统计值为该数值的数字个数
		  3.若其个数大于数组长度的一般，则输出该值；否则，输出0
    
**************************************************************************************************************************/

class Solution {
public:
    int MoreThanHalfNum_Solution(vector<int> numbers) {
        sort(numbers.begin(),numbers.end());
        int len=0;
        int size=numbers.size();
        int key=numbers[size/2];
        for(int i=0;i<size;++i)
        {
            if(numbers[i]==key)
            {
                len++;
            }
        }
        if(len>size/2)
        {
            return key;
        }
        return 0;
    }
};