/*******************************************************************************	
问题描述：一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。
          求该青蛙跳上一个n级的台阶总共有多少种跳法。

思路分析：法1：动态规划方法：
		       1.状态：子状态：跳1级，2级……n级。f(n)：还剩n个台阶的跳法数
               2.状态递推：第一步：跳1级，还剩n-1步；跳2级，还剩n-2步；跳n-(n-1)步，还剩1步;跳n-n步，还剩0步。f(n)=f(n-1)+f(n-2)+……f(1)+f(0).
		       3.初始条件：f(0)=1,f(1)=1
		  法2：排列：
			   1.除最后一个台阶，每个台阶都有可能被跳到，也有可能跳不到，故有2^(n-1)种跳法。
*******************************************************************************/	
int jumpFloorII(int number) {
    if(number==0||number==1)
       return 1;
    else
    {
       int times=0;
       for(int i=1;i<=number;i++)
       {
           times+=jumpFloorII(number-i);
       }
       return times;
    }
}