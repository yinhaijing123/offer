/*******************************************************************************	
问题描述：一只青蛙一次可以跳上1级台阶，也可以跳上2级。
          求该青蛙跳上一个n级的台阶总共有多少种跳法（先后次序不同算不同的结果）

思路分析：动态规划方法：
		  1.状态：子状态：跳1级，2级；f(n)：还剩n个台阶的跳法数
          2.状态递推：第一步：跳1级，还剩n-1步；跳2级，还剩n-2步。f(n)=f(n-1)+f(n-2).
		  3.初始条件：f(1)=1,f(2)=2
*******************************************************************************/	
int jumpFloor(int number) {
    if(number==1)
       return 1;
    if(number==2)
       return 2;
    return jumpFloor(number-1)+jumpFloor(number-2);
}